// Code generated by protoc-gen-go-json. DO NOT EDIT.
// versions:
// - protoc-gen-go-json v1.5.1
// - protoc             v4.22.2
// source: ttn/lorawan/v3/networkserver_relay.proto

package ttnpb

import (
	golang "github.com/TheThingsIndustries/protoc-gen-go-json/golang"
	jsonplugin "github.com/TheThingsIndustries/protoc-gen-go-json/jsonplugin"
)

// MarshalProtoJSON marshals the CreateRelayRequest message to JSON.
func (x *CreateRelayRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil || s.HasField("end_device_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		x.EndDeviceIds.MarshalProtoJSON(s.WithField("end_device_ids"))
	}
	if x.Settings != nil || s.HasField("settings") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("settings")
		x.Settings.MarshalProtoJSON(s.WithField("settings"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the CreateRelayRequest to JSON.
func (x *CreateRelayRequest) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the CreateRelayRequest message from JSON.
func (x *CreateRelayRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			if s.ReadNil() {
				x.EndDeviceIds = nil
				return
			}
			x.EndDeviceIds = &EndDeviceIdentifiers{}
			x.EndDeviceIds.UnmarshalProtoJSON(s.WithField("end_device_ids", true))
		case "settings":
			if s.ReadNil() {
				x.Settings = nil
				return
			}
			x.Settings = &RelaySettings{}
			x.Settings.UnmarshalProtoJSON(s.WithField("settings", true))
		}
	})
}

// UnmarshalJSON unmarshals the CreateRelayRequest from JSON.
func (x *CreateRelayRequest) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the CreateRelayResponse message to JSON.
func (x *CreateRelayResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Settings != nil || s.HasField("settings") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("settings")
		x.Settings.MarshalProtoJSON(s.WithField("settings"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the CreateRelayResponse to JSON.
func (x *CreateRelayResponse) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the CreateRelayResponse message from JSON.
func (x *CreateRelayResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "settings":
			if s.ReadNil() {
				x.Settings = nil
				return
			}
			x.Settings = &RelaySettings{}
			x.Settings.UnmarshalProtoJSON(s.WithField("settings", true))
		}
	})
}

// UnmarshalJSON unmarshals the CreateRelayResponse from JSON.
func (x *CreateRelayResponse) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the GetRelayRequest message to JSON.
func (x *GetRelayRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil || s.HasField("end_device_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		x.EndDeviceIds.MarshalProtoJSON(s.WithField("end_device_ids"))
	}
	if x.FieldMask != nil || s.HasField("field_mask") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("field_mask")
		if x.FieldMask == nil {
			s.WriteNil()
		} else {
			golang.MarshalLegacyFieldMask(s, x.FieldMask)
		}
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GetRelayRequest to JSON.
func (x *GetRelayRequest) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the GetRelayRequest message from JSON.
func (x *GetRelayRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			if s.ReadNil() {
				x.EndDeviceIds = nil
				return
			}
			x.EndDeviceIds = &EndDeviceIdentifiers{}
			x.EndDeviceIds.UnmarshalProtoJSON(s.WithField("end_device_ids", true))
		case "field_mask", "fieldMask":
			s.AddField("field_mask")
			if s.ReadNil() {
				x.FieldMask = nil
				return
			}
			v := golang.UnmarshalFieldMask(s)
			if s.Err() != nil {
				return
			}
			x.FieldMask = v
		}
	})
}

// UnmarshalJSON unmarshals the GetRelayRequest from JSON.
func (x *GetRelayRequest) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the GetRelayResponse message to JSON.
func (x *GetRelayResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Settings != nil || s.HasField("settings") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("settings")
		x.Settings.MarshalProtoJSON(s.WithField("settings"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GetRelayResponse to JSON.
func (x *GetRelayResponse) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the GetRelayResponse message from JSON.
func (x *GetRelayResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "settings":
			if s.ReadNil() {
				x.Settings = nil
				return
			}
			x.Settings = &RelaySettings{}
			x.Settings.UnmarshalProtoJSON(s.WithField("settings", true))
		}
	})
}

// UnmarshalJSON unmarshals the GetRelayResponse from JSON.
func (x *GetRelayResponse) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the UpdateRelayRequest message to JSON.
func (x *UpdateRelayRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil || s.HasField("end_device_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		x.EndDeviceIds.MarshalProtoJSON(s.WithField("end_device_ids"))
	}
	if x.Settings != nil || s.HasField("settings") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("settings")
		x.Settings.MarshalProtoJSON(s.WithField("settings"))
	}
	if x.FieldMask != nil || s.HasField("field_mask") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("field_mask")
		if x.FieldMask == nil {
			s.WriteNil()
		} else {
			golang.MarshalLegacyFieldMask(s, x.FieldMask)
		}
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the UpdateRelayRequest to JSON.
func (x *UpdateRelayRequest) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the UpdateRelayRequest message from JSON.
func (x *UpdateRelayRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			if s.ReadNil() {
				x.EndDeviceIds = nil
				return
			}
			x.EndDeviceIds = &EndDeviceIdentifiers{}
			x.EndDeviceIds.UnmarshalProtoJSON(s.WithField("end_device_ids", true))
		case "settings":
			if s.ReadNil() {
				x.Settings = nil
				return
			}
			x.Settings = &RelaySettings{}
			x.Settings.UnmarshalProtoJSON(s.WithField("settings", true))
		case "field_mask", "fieldMask":
			s.AddField("field_mask")
			if s.ReadNil() {
				x.FieldMask = nil
				return
			}
			v := golang.UnmarshalFieldMask(s)
			if s.Err() != nil {
				return
			}
			x.FieldMask = v
		}
	})
}

// UnmarshalJSON unmarshals the UpdateRelayRequest from JSON.
func (x *UpdateRelayRequest) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the UpdateRelayResponse message to JSON.
func (x *UpdateRelayResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Settings != nil || s.HasField("settings") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("settings")
		x.Settings.MarshalProtoJSON(s.WithField("settings"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the UpdateRelayResponse to JSON.
func (x *UpdateRelayResponse) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the UpdateRelayResponse message from JSON.
func (x *UpdateRelayResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "settings":
			if s.ReadNil() {
				x.Settings = nil
				return
			}
			x.Settings = &RelaySettings{}
			x.Settings.UnmarshalProtoJSON(s.WithField("settings", true))
		}
	})
}

// UnmarshalJSON unmarshals the UpdateRelayResponse from JSON.
func (x *UpdateRelayResponse) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the DeleteRelayRequest message to JSON.
func (x *DeleteRelayRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil || s.HasField("end_device_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		x.EndDeviceIds.MarshalProtoJSON(s.WithField("end_device_ids"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the DeleteRelayRequest to JSON.
func (x *DeleteRelayRequest) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the DeleteRelayRequest message from JSON.
func (x *DeleteRelayRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			if s.ReadNil() {
				x.EndDeviceIds = nil
				return
			}
			x.EndDeviceIds = &EndDeviceIdentifiers{}
			x.EndDeviceIds.UnmarshalProtoJSON(s.WithField("end_device_ids", true))
		}
	})
}

// UnmarshalJSON unmarshals the DeleteRelayRequest from JSON.
func (x *DeleteRelayRequest) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the CreateRelayUplinkForwardingRuleRequest message to JSON.
func (x *CreateRelayUplinkForwardingRuleRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil || s.HasField("end_device_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		x.EndDeviceIds.MarshalProtoJSON(s.WithField("end_device_ids"))
	}
	if x.Index != 0 || s.HasField("index") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("index")
		s.WriteUint32(x.Index)
	}
	if x.Rule != nil || s.HasField("rule") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rule")
		x.Rule.MarshalProtoJSON(s.WithField("rule"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the CreateRelayUplinkForwardingRuleRequest to JSON.
func (x *CreateRelayUplinkForwardingRuleRequest) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the CreateRelayUplinkForwardingRuleRequest message from JSON.
func (x *CreateRelayUplinkForwardingRuleRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			if s.ReadNil() {
				x.EndDeviceIds = nil
				return
			}
			x.EndDeviceIds = &EndDeviceIdentifiers{}
			x.EndDeviceIds.UnmarshalProtoJSON(s.WithField("end_device_ids", true))
		case "index":
			s.AddField("index")
			x.Index = s.ReadUint32()
		case "rule":
			if s.ReadNil() {
				x.Rule = nil
				return
			}
			x.Rule = &RelayUplinkForwardingRule{}
			x.Rule.UnmarshalProtoJSON(s.WithField("rule", true))
		}
	})
}

// UnmarshalJSON unmarshals the CreateRelayUplinkForwardingRuleRequest from JSON.
func (x *CreateRelayUplinkForwardingRuleRequest) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the CreateRelayUplinkForwardingRuleResponse message to JSON.
func (x *CreateRelayUplinkForwardingRuleResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Rule != nil || s.HasField("rule") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rule")
		x.Rule.MarshalProtoJSON(s.WithField("rule"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the CreateRelayUplinkForwardingRuleResponse to JSON.
func (x *CreateRelayUplinkForwardingRuleResponse) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the CreateRelayUplinkForwardingRuleResponse message from JSON.
func (x *CreateRelayUplinkForwardingRuleResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "rule":
			if s.ReadNil() {
				x.Rule = nil
				return
			}
			x.Rule = &RelayUplinkForwardingRule{}
			x.Rule.UnmarshalProtoJSON(s.WithField("rule", true))
		}
	})
}

// UnmarshalJSON unmarshals the CreateRelayUplinkForwardingRuleResponse from JSON.
func (x *CreateRelayUplinkForwardingRuleResponse) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the GetRelayUplinkForwardingRuleRequest message to JSON.
func (x *GetRelayUplinkForwardingRuleRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil || s.HasField("end_device_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		x.EndDeviceIds.MarshalProtoJSON(s.WithField("end_device_ids"))
	}
	if x.Index != 0 || s.HasField("index") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("index")
		s.WriteUint32(x.Index)
	}
	if x.FieldMask != nil || s.HasField("field_mask") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("field_mask")
		if x.FieldMask == nil {
			s.WriteNil()
		} else {
			golang.MarshalLegacyFieldMask(s, x.FieldMask)
		}
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GetRelayUplinkForwardingRuleRequest to JSON.
func (x *GetRelayUplinkForwardingRuleRequest) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the GetRelayUplinkForwardingRuleRequest message from JSON.
func (x *GetRelayUplinkForwardingRuleRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			if s.ReadNil() {
				x.EndDeviceIds = nil
				return
			}
			x.EndDeviceIds = &EndDeviceIdentifiers{}
			x.EndDeviceIds.UnmarshalProtoJSON(s.WithField("end_device_ids", true))
		case "index":
			s.AddField("index")
			x.Index = s.ReadUint32()
		case "field_mask", "fieldMask":
			s.AddField("field_mask")
			if s.ReadNil() {
				x.FieldMask = nil
				return
			}
			v := golang.UnmarshalFieldMask(s)
			if s.Err() != nil {
				return
			}
			x.FieldMask = v
		}
	})
}

// UnmarshalJSON unmarshals the GetRelayUplinkForwardingRuleRequest from JSON.
func (x *GetRelayUplinkForwardingRuleRequest) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the GetRelayUplinkForwardingRuleResponse message to JSON.
func (x *GetRelayUplinkForwardingRuleResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Rule != nil || s.HasField("rule") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rule")
		x.Rule.MarshalProtoJSON(s.WithField("rule"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GetRelayUplinkForwardingRuleResponse to JSON.
func (x *GetRelayUplinkForwardingRuleResponse) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the GetRelayUplinkForwardingRuleResponse message from JSON.
func (x *GetRelayUplinkForwardingRuleResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "rule":
			if s.ReadNil() {
				x.Rule = nil
				return
			}
			x.Rule = &RelayUplinkForwardingRule{}
			x.Rule.UnmarshalProtoJSON(s.WithField("rule", true))
		}
	})
}

// UnmarshalJSON unmarshals the GetRelayUplinkForwardingRuleResponse from JSON.
func (x *GetRelayUplinkForwardingRuleResponse) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the ListRelayUplinkForwardingRulesRequest message to JSON.
func (x *ListRelayUplinkForwardingRulesRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil || s.HasField("end_device_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		x.EndDeviceIds.MarshalProtoJSON(s.WithField("end_device_ids"))
	}
	if x.FieldMask != nil || s.HasField("field_mask") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("field_mask")
		if x.FieldMask == nil {
			s.WriteNil()
		} else {
			golang.MarshalLegacyFieldMask(s, x.FieldMask)
		}
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the ListRelayUplinkForwardingRulesRequest to JSON.
func (x *ListRelayUplinkForwardingRulesRequest) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the ListRelayUplinkForwardingRulesRequest message from JSON.
func (x *ListRelayUplinkForwardingRulesRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			if s.ReadNil() {
				x.EndDeviceIds = nil
				return
			}
			x.EndDeviceIds = &EndDeviceIdentifiers{}
			x.EndDeviceIds.UnmarshalProtoJSON(s.WithField("end_device_ids", true))
		case "field_mask", "fieldMask":
			s.AddField("field_mask")
			if s.ReadNil() {
				x.FieldMask = nil
				return
			}
			v := golang.UnmarshalFieldMask(s)
			if s.Err() != nil {
				return
			}
			x.FieldMask = v
		}
	})
}

// UnmarshalJSON unmarshals the ListRelayUplinkForwardingRulesRequest from JSON.
func (x *ListRelayUplinkForwardingRulesRequest) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the ListRelayUplinkForwardingRulesResponse message to JSON.
func (x *ListRelayUplinkForwardingRulesResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.Rules) > 0 || s.HasField("rules") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rules")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.Rules {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("rules"))
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the ListRelayUplinkForwardingRulesResponse to JSON.
func (x *ListRelayUplinkForwardingRulesResponse) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the ListRelayUplinkForwardingRulesResponse message from JSON.
func (x *ListRelayUplinkForwardingRulesResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "rules":
			s.AddField("rules")
			if s.ReadNil() {
				x.Rules = nil
				return
			}
			s.ReadArray(func() {
				if s.ReadNil() {
					x.Rules = append(x.Rules, nil)
					return
				}
				v := &RelayUplinkForwardingRule{}
				v.UnmarshalProtoJSON(s.WithField("rules", false))
				if s.Err() != nil {
					return
				}
				x.Rules = append(x.Rules, v)
			})
		}
	})
}

// UnmarshalJSON unmarshals the ListRelayUplinkForwardingRulesResponse from JSON.
func (x *ListRelayUplinkForwardingRulesResponse) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the UpdateRelayUplinkForwardingRuleRequest message to JSON.
func (x *UpdateRelayUplinkForwardingRuleRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil || s.HasField("end_device_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		x.EndDeviceIds.MarshalProtoJSON(s.WithField("end_device_ids"))
	}
	if x.Index != 0 || s.HasField("index") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("index")
		s.WriteUint32(x.Index)
	}
	if x.Rule != nil || s.HasField("rule") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rule")
		x.Rule.MarshalProtoJSON(s.WithField("rule"))
	}
	if x.FieldMask != nil || s.HasField("field_mask") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("field_mask")
		if x.FieldMask == nil {
			s.WriteNil()
		} else {
			golang.MarshalLegacyFieldMask(s, x.FieldMask)
		}
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the UpdateRelayUplinkForwardingRuleRequest to JSON.
func (x *UpdateRelayUplinkForwardingRuleRequest) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the UpdateRelayUplinkForwardingRuleRequest message from JSON.
func (x *UpdateRelayUplinkForwardingRuleRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			if s.ReadNil() {
				x.EndDeviceIds = nil
				return
			}
			x.EndDeviceIds = &EndDeviceIdentifiers{}
			x.EndDeviceIds.UnmarshalProtoJSON(s.WithField("end_device_ids", true))
		case "index":
			s.AddField("index")
			x.Index = s.ReadUint32()
		case "rule":
			if s.ReadNil() {
				x.Rule = nil
				return
			}
			x.Rule = &RelayUplinkForwardingRule{}
			x.Rule.UnmarshalProtoJSON(s.WithField("rule", true))
		case "field_mask", "fieldMask":
			s.AddField("field_mask")
			if s.ReadNil() {
				x.FieldMask = nil
				return
			}
			v := golang.UnmarshalFieldMask(s)
			if s.Err() != nil {
				return
			}
			x.FieldMask = v
		}
	})
}

// UnmarshalJSON unmarshals the UpdateRelayUplinkForwardingRuleRequest from JSON.
func (x *UpdateRelayUplinkForwardingRuleRequest) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the UpdateRelayUplinkForwardingRuleResponse message to JSON.
func (x *UpdateRelayUplinkForwardingRuleResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Rule != nil || s.HasField("rule") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rule")
		x.Rule.MarshalProtoJSON(s.WithField("rule"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the UpdateRelayUplinkForwardingRuleResponse to JSON.
func (x *UpdateRelayUplinkForwardingRuleResponse) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the UpdateRelayUplinkForwardingRuleResponse message from JSON.
func (x *UpdateRelayUplinkForwardingRuleResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "rule":
			if s.ReadNil() {
				x.Rule = nil
				return
			}
			x.Rule = &RelayUplinkForwardingRule{}
			x.Rule.UnmarshalProtoJSON(s.WithField("rule", true))
		}
	})
}

// UnmarshalJSON unmarshals the UpdateRelayUplinkForwardingRuleResponse from JSON.
func (x *UpdateRelayUplinkForwardingRuleResponse) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the DeleteRelayUplinkForwardingRuleRequest message to JSON.
func (x *DeleteRelayUplinkForwardingRuleRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.EndDeviceIds != nil || s.HasField("end_device_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("end_device_ids")
		x.EndDeviceIds.MarshalProtoJSON(s.WithField("end_device_ids"))
	}
	if x.Index != 0 || s.HasField("index") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("index")
		s.WriteUint32(x.Index)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the DeleteRelayUplinkForwardingRuleRequest to JSON.
func (x *DeleteRelayUplinkForwardingRuleRequest) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the DeleteRelayUplinkForwardingRuleRequest message from JSON.
func (x *DeleteRelayUplinkForwardingRuleRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "end_device_ids", "endDeviceIds":
			if s.ReadNil() {
				x.EndDeviceIds = nil
				return
			}
			x.EndDeviceIds = &EndDeviceIdentifiers{}
			x.EndDeviceIds.UnmarshalProtoJSON(s.WithField("end_device_ids", true))
		case "index":
			s.AddField("index")
			x.Index = s.ReadUint32()
		}
	})
}

// UnmarshalJSON unmarshals the DeleteRelayUplinkForwardingRuleRequest from JSON.
func (x *DeleteRelayUplinkForwardingRuleRequest) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}
